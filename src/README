
Top level source directory.  Things which maybe aren't obvious are described
in this file.



This code makes use of DPDK 17.08 features which are currently in the master
branch.  Pull the DPDK repo, and attempt to checkout v17.08. If this fails
checkout the master branch until the v17.08 tag is added.

Once the dpdk repo has been cloned, it must be built before anything in the 
vfd source tree can be built. To do this follow the following steps:

    -   cd dpdk				# where ever you installed it
    -   git checkout <correct-tag/branch>
    -   make config T=x86_64-native-linuxapp-gcc
    -   make
    -   usertools/dpdk-setup.sh
         + select the option which corresponds to the correct
           environment, most likely: x86_64-native-linuxapp-gcc
           This will go through another make process which sets
           libraries and such up and 'installs'. If there are link 
           errors during the build, it is likely this step was not 
           executed, or didn't finish correctly

    -   export RTE_SDK=$PWD
    -   export RTE_TARGET=x86_64-native-linuxapp-gcc

Building VFd Itself
After the DPDK library has been built, you can cd into vfd/src and:
	- cd vfd    # which ever directory you cloned the vfd repo into
	- cd lib
	- make jsmn			# will clone and build the jsmn library
	- make libvfd.a		# will build vfd support library
	- cd ../vfd
	- make clean 
	- make


Todo:
	A toplevel mk/make build needs to be provided
